%{
open System
open DslAst
%}

%token TESTHEADER
%token ERROR
%token ARROW
%token EQ
%token BF1
%token BF2
%token TRUE
%token FALSE
%token QUOT
%token MODULE
%token DEPENDENCIES
%token <string> FQN
%token <string> SNAME
%token EOF

%start start
%type <DslAst.DependencyTest> start

%%

start:
    | testDeclaration EOF { $1 }

testDeclaration:
    | TESTHEADER SNAME boolFlag1 boolFlag2 registrationSet { Test($2, $3, $4, $5) }
    | TESTHEADER SNAME boolFlag2 boolFlag1 registrationSet { Test($2, $4, $3, $5) }

registration:
    | FQN ARROW FQN { Class($1, $3) }
	| MODULE FQN    { Module($2) }

registrationSet:
    | registration                 { [$1] }
	| registrationSet registration { $2::$1 |> List.rev }

boolFlag1:
    | BF1 EQ TRUE  { Flag1(true)  }
	| BF1 EQ FALSE { Flag1(false) }

boolFlag2:
    | BF2 EQ TRUE  { Flag2(true)  }
	| BF2 EQ FALSE { Flag2(false) }